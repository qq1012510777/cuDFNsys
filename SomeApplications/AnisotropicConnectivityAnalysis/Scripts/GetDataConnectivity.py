import numpy as np
import h5py
import sys
import os

Path=os.getcwd() + "/" + str(sys.argv[1])
SetNo_I=int(sys.argv[2])
SetNo_II=int(sys.argv[3])
DFNNo_I=int(sys.argv[4])
DFNNo_II=int(sys.argv[5])
dataFilename=str(sys.argv[6])

rows=SetNo_II-SetNo_I+1
cols=DFNNo_II-DFNNo_I+1
X_P30=np.zeros((rows, cols))
X_P30_Perco=np.zeros((rows, cols))
X_P30_LargeClu=np.zeros((rows, cols))
X_P32=np.zeros((rows, cols))
X_P32_Perco=np.zeros((rows, cols))
X_P32_LargeClu=np.zeros((rows, cols))
X_P33=np.zeros((rows, cols))
X_P33_Perco=np.zeros((rows, cols))
X_P33_LargeClu=np.zeros((rows, cols))
X_PercolationState=np.zeros((rows, cols))
X_n_I=np.zeros((rows, cols))

Y_P30=np.zeros((rows, cols))
Y_P30_Perco=np.zeros((rows, cols))
Y_P30_LargeClu=np.zeros((rows, cols))
Y_P32=np.zeros((rows, cols))
Y_P32_Perco=np.zeros((rows, cols))
Y_P32_LargeClu=np.zeros((rows, cols))
Y_P33=np.zeros((rows, cols))
Y_P33_Perco=np.zeros((rows, cols))
Y_P33_LargeClu=np.zeros((rows, cols))
Y_PercolationState=np.zeros((rows, cols))
Y_n_I=np.zeros((rows, cols))

Z_P30=np.zeros((rows, cols))
Z_P30_Perco=np.zeros((rows, cols))
Z_P30_LargeClu=np.zeros((rows, cols))
Z_P32=np.zeros((rows, cols))
Z_P32_Perco=np.zeros((rows, cols))
Z_P32_LargeClu=np.zeros((rows, cols))
Z_P33=np.zeros((rows, cols))
Z_P33_Perco=np.zeros((rows, cols))
Z_P33_LargeClu=np.zeros((rows, cols))
Z_PercolationState=np.zeros((rows, cols))
Z_n_I=np.zeros((rows, cols))

for i in range(SetNo_I, SetNo_II+1):
    setName=Path+"/set"+str(i).zfill(5)
    print("set " + str(i))
    for j in range(DFNNo_I, DFNNo_II+1):
        
        for k in range(0, 3):
            H5DFNDataname=setName+"/DataDFN_"+str(j).zfill(2)+"_"+str(k)+".h5"
            with h5py.File(H5DFNDataname, "r") as f:
                if (k == 0):
                    X_P30 = np.array(f["P30"][0])
                    X_P30_Perco = np.array(f["P30_connected"][0])
                    X_P30_LargeClu = np.array(f["P30_largest_cluster"][0])
                    X_P32 = np.array(f["P32_total"][0])
                    X_P32_Perco = np.array(f["P32_connected"][0])
                    X_P32_LargeClu = np.array(f["P32_largest_cluster"][0])
                    X_P33 = np.array(f["P33_total"][0])
                    X_P33_Perco = np.array(f["P33_connected"][0])
                    X_P33_LargeClu = np.array(f["P33_largest_cluster"][0])
                    X_PercolationState = np.array(f["Percolation_probability"][0])
                    X_n_I = np.array(f["n_I"][0])
                if (k == 1):
                    Y_P30 = np.array(f["P30"][0])
                    Y_P30_Perco = np.array(f["P30_connected"][0])
                    Y_P30_LargeClu = np.array(f["P30_largest_cluster"][0])
                    Y_P32 = np.array(f["P32_total"][0])
                    Y_P32_Perco = np.array(f["P32_connected"][0])
                    Y_P32_LargeClu = np.array(f["P32_largest_cluster"][0])
                    Y_P33 = np.array(f["P33_total"][0])
                    Y_P33_Perco = np.array(f["P33_connected"][0])
                    Y_P33_LargeClu = np.array(f["P33_largest_cluster"][0])
                    Y_PercolationState = np.array(f["Percolation_probability"][0])
                    Y_n_I = np.array(f["n_I"][0])
                if (k == 2):
                    Z_P30 = np.array(f["P30"][0])
                    Z_P30_Perco = np.array(f["P30_connected"][0])
                    Z_P30_LargeClu = np.array(f["P30_largest_cluster"][0])
                    Z_P32 = np.array(f["P32_total"][0])
                    Z_P32_Perco = np.array(f["P32_connected"][0])
                    Z_P32_LargeClu = np.array(f["P32_largest_cluster"][0])
                    Z_P33 = np.array(f["P33_total"][0])
                    Z_P33_Perco = np.array(f["P33_connected"][0])
                    Z_P33_LargeClu = np.array(f["P33_largest_cluster"][0])
                    Z_PercolationState = np.array(f["Percolation_probability"][0])
                    Z_n_I = np.array(f["n_I"][0])

with h5py.File(dataFilename, "w") as f:
    f.create_dataset("X_P30", data=X_P30)
    f.create_dataset("X_P30_Perco", data=X_P30_Perco)
    f.create_dataset("X_P30_LargeClu", data=X_P30_LargeClu)
    f.create_dataset("X_P32", data=X_P32)
    f.create_dataset("X_P32_Perco", data=X_P32_Perco)
    f.create_dataset("X_P32_LargeClu", data=X_P32_LargeClu)
    f.create_dataset("X_P33", data=X_P33)
    f.create_dataset("X_P33_Perco", data=X_P33_Perco)
    f.create_dataset("X_P33_LargeClu", data=X_P33_LargeClu)
    f.create_dataset("X_PercolationState", data=X_PercolationState)
    f.create_dataset("X_n_I", data=X_n_I)

    f.create_dataset("Y_P30", data=Y_P30)
    f.create_dataset("Y_P30_Perco", data=Y_P30_Perco)
    f.create_dataset("Y_P30_LargeClu", data=Y_P30_LargeClu)
    f.create_dataset("Y_P32", data=Y_P32)
    f.create_dataset("Y_P32_Perco", data=Y_P32_Perco)
    f.create_dataset("Y_P32_LargeClu", data=Y_P32_LargeClu)
    f.create_dataset("Y_P33", data=Y_P33)
    f.create_dataset("Y_P33_Perco", data=Y_P33_Perco)
    f.create_dataset("Y_P33_LargeClu", data=Y_P33_LargeClu)
    f.create_dataset("Y_PercolationState", data=Y_PercolationState)
    f.create_dataset("Y_n_I", data=Y_n_I)

    f.create_dataset("Z_P30", data=Z_P30)
    f.create_dataset("Z_P30_Perco", data=Z_P30_Perco)
    f.create_dataset("Z_P30_LargeClu", data=Z_P30_LargeClu)
    f.create_dataset("Z_P32", data=Z_P32)
    f.create_dataset("Z_P32_Perco", data=Z_P32_Perco)
    f.create_dataset("Z_P32_LargeClu", data=Z_P32_LargeClu)
    f.create_dataset("Z_P33", data=Z_P33)
    f.create_dataset("Z_P33_Perco", data=Z_P33_Perco)
    f.create_dataset("Z_P33_LargeClu", data=Z_P33_LargeClu)
    f.create_dataset("Z_PercolationState", data=Z_PercolationState)
    f.create_dataset("Z_n_I", data=Z_n_I)
